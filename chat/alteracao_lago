from models import Vencimento
from ext import db
from datetime import datetime
import openai

# Essa parte eu peguei no gpt, tô tentando entender ela
# Configura sua chave da API OpenAI
openai.api_key = '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'

def tela_inicial():
    return (
        "Bem-vindo ao Bemobi! Por favor, escolha uma das opções:\n"
        "1 - Vencimento\n"
        "2 - Renovação\n"
        "3 - Planos\n"
        "4 - Cancelamento\n"
        "5 - Contato\n"
        "6 - Conversa Inteligente"
    )

def handle_message(message, user_id):
    message = message.lower()

    '''# Cancelamento de assinatura
    if "cancelar assinatura" in message:
        return "Entendido. Você gostaria de cancelar sua assinatura. Por favor, confirme."
        '''

    # Alterar vencimento de assinatura
    
    if message in ["1", "vencimento"]:
        return (
            "Você escolheu alterar o vencimento. Escolha uma data para o novo vencimento:\n"
            "1 - Dia 05\n"
            "2 - Dia 15\n"
            "3 - Dia 25"
        )
    
    # Alterar vencimento com as opções de data
    elif message in ["1", "2", "3"] and "vencimento" in message:
        data_map = {
            "1": "05",
            "2": "15",
            "3": "25"
        }
        dia_vencimento = data_map.get(message, None)
        if dia_vencimento:
            vencimento_atual = Vencimento.query.filter_by(user_id=user_id).first()
            mes_ano_atual = datetime.now().strftime('%m/%Y') if not vencimento_atual else vencimento_atual.data_vencimento.strftime('%m/%Y')
            nova_data = f"{dia_vencimento}/{mes_ano_atual}"
            try:
                data_vencimento = datetime.strptime(nova_data, '%d/%m/%Y')

                vencimento = Vencimento.query.filter_by(user_id=user_id).first()

                if vencimento:
                    vencimento.data_vencimento = data_vencimento
                    db.session.commit()
                    return f"O dia de vencimento foi alterado para {data_vencimento.strftime('%d')}."
                else:
                    novo_vencimento = Vencimento(user_id=user_id, data_vencimento=data_vencimento)
                    db.session.add(novo_vencimento)
                    db.session.commit()
                    return f"O dia de vencimento foi definido para {data_vencimento.strftime('%d')}."
            except ValueError:
                return "Erro ao processar a data de vencimento. Por favor, tente novamente."

    # Renovação de assinatura
    elif message in ["2", "renovação", "renovar assinatura"]:
        if "sim" in message:
            return "Sua assinatura foi renovada com sucesso!"
        elif "voltar" in message:
            return (
                "Você escolheu a opção de renovação. Deseja continuar com o mesmo plano ou alterar? "
                "Digite 'sim' para confirmar ou 'voltar' para a tela inicial."
            )
        else:
            return "Você gostaria de renovar sua assinatura. Confirmar renovação? (sim/voltar)"

            '''elif "renovar assinatura" in message:
        return "Certo! Vamos renovar sua assinatura. Deseja continuar com o mesmo plano ou alterar?"'''
    # Informações sobre planos disponíveis
    elif message in ["3", "planos", "planos disponíveis"]:
        return (
            "Oferecemos os seguintes planos:\n"
            "1 - Plano Básico\n"
            "2 - Plano Premium\n"
            "Deseja mais informações sobre um plano específico?"
        )
        '''
        elif "planos disponíveis" in message or "detalhes do plano" in message:
        return "Oferecemos os seguintes planos: Básico e Premium. Cada plano oferece benefícios diferentes. Gostaria de saber mais detalhes sobre um dos planos?"
        '''
    # Cancelamento: confirmação
    elif message in ["4", "cancelamento", "cancelar assinatura"]:
        if "sim" in message:
            return "Sua assinatura foi cancelada com sucesso."
        elif "voltar" in message:
            return (
                "Você escolheu a opção de cancelamento. Tem certeza de que deseja cancelar sua assinatura? "
                "Digite 'sim' para confirmar ou 'voltar' para a tela inicial."
            )
        else:
            return "Você realmente deseja cancelar sua assinatura? (sim/voltar)"

    # Contato
    elif message in ["5", "contato"]:
        return "Por favor, entre em contato com a nossa empressa pelo site: https://bemobi.com/pt/contact-us-pt-br/"
    # Integração GPT-3

    elif message in ["6", "conversa inteligente"]:
        return "Digite sua pergunta ou mensagem para iniciar uma conversa inteligente com nossa IA."

    # Integração GPT-3 para conversa inteligente
    elif message.startswith("conversa"):
        
        response = openai.Completion.create(
            engine="text-davinci-003",
            prompt=message,
            max_tokens=150
        )
        return response.choices[0].text.strip()

    elif message == "voltar":
        return tela_inicial()

    # Caso nenhuma opção válida seja inserida
    else:
        return "Opção inválida. Por favor, tente novamente ou digite 'voltar' para retornar à tela inicial."
